/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Interfaces.FormObserver;
import CoreApplication.ArmrestsNeeded;
import CoreApplication.Chair;
import CoreApplication.Furniture;
import CoreApplication.WoodType;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author Richard North a0313108
 */
public class ChairForm extends javax.swing.JPanel {

    private List<FormObserver> observers = new ArrayList<>();
    private Chair chair;
    /**
     * Creates new form ChairForm
     */
    public ChairForm() {
        initComponents();
        clearFill();
        
    }
    
    /**
     * Adds a observer to the collection to be notified
     * @param observer
     */
    public void addObserver(FormObserver observer) {
        observers.add(observer);
    }
    
    /**
     * calls the update method within all observers
     */
    public void updateObservers(Furniture item) {
        for (FormObserver observer : observers) {
            observer.updateBasket(item);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chairImageLabel = new javax.swing.JLabel( new ImageIcon("images/chair.jpg"));
        idNumberLabel = new javax.swing.JLabel();
        typeOfWoodLabel = new javax.swing.JLabel();
        armrestsLabel = new javax.swing.JLabel();
        quantityLabel = new javax.swing.JLabel();
        quantityTextField = new javax.swing.JTextField();
        idNumberTextField = new javax.swing.JTextField();
        armrestCombo = new javax.swing.JComboBox<>();
        addItemButton = new javax.swing.JButton();
        typeOfWoodCombo = new javax.swing.JComboBox<>();
        itemDescription = new javax.swing.JLabel();
        itemType = new javax.swing.JLabel();

        setBackground(new java.awt.Color(155, 217, 215));

        idNumberLabel.setForeground(new java.awt.Color(0, 0, 0));
        idNumberLabel.setText("ID Number");

        typeOfWoodLabel.setForeground(new java.awt.Color(0, 0, 0));
        typeOfWoodLabel.setText("Type of wood");

        armrestsLabel.setForeground(new java.awt.Color(0, 0, 0));
        armrestsLabel.setText("Armrests needed");

        quantityLabel.setForeground(new java.awt.Color(0, 0, 0));
        quantityLabel.setText("Quantity");

        quantityTextField.setBackground(new java.awt.Color(255, 255, 255));
        quantityTextField.setForeground(new java.awt.Color(0, 0, 0));
        quantityTextField.setToolTipText("Enter the desired quantity");

        idNumberTextField.setBackground(new java.awt.Color(255, 255, 255));
        idNumberTextField.setForeground(new java.awt.Color(0, 0, 0));
        idNumberTextField.setToolTipText("Enter the item's ID number");

        armrestCombo.setBackground(new java.awt.Color(255, 255, 255));
        armrestCombo.setForeground(new java.awt.Color(0, 0, 0));
        armrestCombo.setModel(new DefaultComboBoxModel<>(ArmrestsNeeded.values()));
        armrestCombo.setToolTipText("Select whether armrests are needed");

        addItemButton.setBackground(new java.awt.Color(53, 127, 198));
        addItemButton.setForeground(new java.awt.Color(0, 0, 0));
        addItemButton.setText("Add item");
        addItemButton.setToolTipText("Click to add item to basket");
        addItemButton.setMaximumSize(new java.awt.Dimension(80, 25));
        addItemButton.setMinimumSize(new java.awt.Dimension(80, 25));
        addItemButton.setPreferredSize(new java.awt.Dimension(80, 25));
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtonActionPerformed(evt);
            }
        });

        typeOfWoodCombo.setBackground(new java.awt.Color(255, 255, 255));
        typeOfWoodCombo.setModel(new DefaultComboBoxModel<>(WoodType.values()));
        typeOfWoodCombo.setToolTipText("Select the type of wood ");

        itemDescription.setForeground(new java.awt.Color(0, 0, 0));
        itemDescription.setText("<html>Solid, modern, and comfortable wooden chair, <br>comes with customisable options include<br> oak or walnut wood as well as the option <br>to have added armrests. </html>");

        itemType.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        itemType.setForeground(new java.awt.Color(0, 0, 0));
        itemType.setText("Chair");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(armrestsLabel)
                            .addComponent(typeOfWoodLabel)
                            .addComponent(idNumberLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(idNumberTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(armrestCombo, 0, 100, Short.MAX_VALUE)
                            .addComponent(typeOfWoodCombo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(chairImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(quantityLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(itemType, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(157, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chairImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(itemType, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(itemDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(idNumberLabel)
                    .addComponent(quantityLabel)
                    .addComponent(quantityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typeOfWoodLabel)
                    .addComponent(typeOfWoodCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(armrestsLabel)
                    .addComponent(armrestCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtonActionPerformed
        try{
            if(this.chair != null){
                this.chair.setArmrests((ArmrestsNeeded)armrestCombo.getSelectedItem());
                this.chair.setIdNumber(Integer.parseInt(idNumberTextField.getText()));
                this.chair.setQuantity(Integer.parseInt(quantityTextField.getText()));
                this.chair.setTypeOfWood((WoodType)typeOfWoodCombo.getSelectedItem());
                this.chair.setItemPrice(this.chair.calculatePrice());
            }else{
                this.updateObservers( new Chair(
                    (ArmrestsNeeded)armrestCombo.getSelectedItem(),
                    Integer.parseInt(idNumberTextField.getText()),
                    (WoodType)typeOfWoodCombo.getSelectedItem(), 
                    Integer.parseInt(quantityTextField.getText()))); 
            }
            clearFill();
        } catch (Exception e){
            JOptionPane.showMessageDialog(this,"Fields incorrectly filled","Warning",JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_addItemButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JComboBox<ArmrestsNeeded> armrestCombo;
    private javax.swing.JLabel armrestsLabel;
    private javax.swing.JLabel chairImageLabel;
    private javax.swing.JLabel idNumberLabel;
    private javax.swing.JTextField idNumberTextField;
    private javax.swing.JLabel itemDescription;
    private javax.swing.JLabel itemType;
    private javax.swing.JLabel quantityLabel;
    private javax.swing.JTextField quantityTextField;
    private javax.swing.JComboBox<WoodType> typeOfWoodCombo;
    private javax.swing.JLabel typeOfWoodLabel;
    // End of variables declaration//GEN-END:variables

    /**
     * This method is used to clear all data from the input fields.
     */
    public void clearFill(){
        this.chair = null;
        this.armrestCombo.setSelectedItem(null);
        this.typeOfWoodCombo.setSelectedItem(null);
        this.idNumberTextField.setText(null);
        this.quantityTextField.setText(null);
        this.addItemButton.setText("Add item");
    }
    
    /**
     * This method is used to prefill the input fields based of a chair item
     * @param item 
     */
    public void setFill(Chair item) {
        this.chair = item;
        this.armrestCombo.setSelectedItem(item.getArmrests());
        this.typeOfWoodCombo.setSelectedItem(item.getTypeOfWood());
        this.idNumberTextField.setText(String.valueOf(item.getIdNumber()));
        this.quantityTextField.setText(String.valueOf(item.getQuantity()));
        this.addItemButton.setText("Edit item");
    }

}
