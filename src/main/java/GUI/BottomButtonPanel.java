/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Interfaces.BottomPanelObserver;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Richard North a0313108
 */
public class BottomButtonPanel extends javax.swing.JPanel {
    private List<BottomPanelObserver> observers = new ArrayList<>();
    /**
     * Creates new form BottomButtonPanel
     */
    
    public BottomButtonPanel() {
        initComponents();
    }
    
    /**
     * Adds a observer to the collection to be notified
     * @param co 
     */
    public void addPanelObserver(BottomPanelObserver observer) {
        observers.add(observer);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        summaryButton = new javax.swing.JButton();
        clearBasketButton = new javax.swing.JButton();
        saveBasketButton = new javax.swing.JButton();
        loadBasketButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));
        setMinimumSize(new java.awt.Dimension(600, 100));
        setPreferredSize(new java.awt.Dimension(600, 100));
        setLayout(new java.awt.GridBagLayout());

        summaryButton.setBackground(new java.awt.Color(53, 127, 198));
        summaryButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        summaryButton.setForeground(new java.awt.Color(0, 0, 0));
        summaryButton.setText("Summary");
        summaryButton.setToolTipText("Outputs a summary to console");
        summaryButton.setMaximumSize(new java.awt.Dimension(120, 25));
        summaryButton.setMinimumSize(new java.awt.Dimension(120, 25));
        summaryButton.setPreferredSize(new java.awt.Dimension(120, 25));
        summaryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                summaryButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(summaryButton, gridBagConstraints);

        clearBasketButton.setBackground(new java.awt.Color(53, 127, 198));
        clearBasketButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        clearBasketButton.setForeground(new java.awt.Color(0, 0, 0));
        clearBasketButton.setText("Clear basket");
        clearBasketButton.setToolTipText("Clears the current basket");
        clearBasketButton.setMaximumSize(new java.awt.Dimension(120, 25));
        clearBasketButton.setMinimumSize(new java.awt.Dimension(120, 25));
        clearBasketButton.setPreferredSize(new java.awt.Dimension(120, 25));
        clearBasketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearBasketButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(clearBasketButton, gridBagConstraints);

        saveBasketButton.setBackground(new java.awt.Color(53, 127, 198));
        saveBasketButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saveBasketButton.setForeground(new java.awt.Color(0, 0, 0));
        saveBasketButton.setText("Save basket");
        saveBasketButton.setToolTipText("Saves the current basket");
        saveBasketButton.setMaximumSize(new java.awt.Dimension(120, 25));
        saveBasketButton.setMinimumSize(new java.awt.Dimension(120, 25));
        saveBasketButton.setPreferredSize(new java.awt.Dimension(120, 25));
        saveBasketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBasketButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(saveBasketButton, gridBagConstraints);

        loadBasketButton.setBackground(new java.awt.Color(53, 127, 198));
        loadBasketButton.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        loadBasketButton.setForeground(new java.awt.Color(0, 0, 0));
        loadBasketButton.setText("Load basket");
        loadBasketButton.setToolTipText("Load a basket from a previous save");
        loadBasketButton.setMaximumSize(new java.awt.Dimension(120, 25));
        loadBasketButton.setMinimumSize(new java.awt.Dimension(120, 25));
        loadBasketButton.setPreferredSize(new java.awt.Dimension(120, 25));
        loadBasketButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadBasketButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 6);
        add(loadBasketButton, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void summaryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_summaryButtonActionPerformed
        for (BottomPanelObserver observer : observers) {
            observer.summary();
        }
    }//GEN-LAST:event_summaryButtonActionPerformed

    private void clearBasketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearBasketButtonActionPerformed
        int result = JOptionPane.showConfirmDialog(this.getRootPane(), 
                "Are you sure you want to clear the basket",
                "Warning",JOptionPane.OK_CANCEL_OPTION);
        if(result == JOptionPane.OK_OPTION){
            for (BottomPanelObserver observer : observers) {
                observer.clear();
            }
        }
       
    }//GEN-LAST:event_clearBasketButtonActionPerformed

    private void saveBasketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBasketButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setDialogTitle("Save basket");   
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("DAT File", "DAT"));
        
        int result = fileChooser.showSaveDialog(this.getRootPane());
        if (result == JFileChooser.APPROVE_OPTION) {
            String fileToSave = fileChooser.getSelectedFile().toString();
            if (! fileToSave.contains(".DAT")){
                fileToSave += ".DAT";
            }
            for (BottomPanelObserver observer : observers) {
                observer.save(fileToSave);
            }
        }
    }//GEN-LAST:event_saveBasketButtonActionPerformed

    private void loadBasketButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadBasketButtonActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        fileChooser.setDialogTitle("Load basket");  
        fileChooser.setAcceptAllFileFilterUsed(false);
        fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("DAT File", "DAT"));
        
        int result = fileChooser.showOpenDialog(this.getRootPane());
        if (result == JFileChooser.APPROVE_OPTION) {
            File fileToLoad = fileChooser.getSelectedFile();
            for (BottomPanelObserver observer : observers) {
                observer.load(fileToLoad.toString());
            }
        }
    }//GEN-LAST:event_loadBasketButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton clearBasketButton;
    private javax.swing.JButton loadBasketButton;
    private javax.swing.JButton saveBasketButton;
    private javax.swing.JButton summaryButton;
    // End of variables declaration//GEN-END:variables
}
